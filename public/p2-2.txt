Paper2 Practical 2
                                                   
Hebbâ€™s Network
Code :
vector = []
# input 
input_vector = int(input('Enter the Number of inputs: ')) 
for i in range(input_vector): 
vector.append(list(map(float, input(f'Enter the input-{i} : ').strip().split()))) 
# output 
output = list(map(float,input(f'Enter the output-{i} : ').strip().split())) 

# weights 
weight = list(map(float, input(f'Enter the weights : ').strip().split())) 
# learning rate 
n = float(input(f'Enter the learning rate: ')) 
# bias 
bias = float(input(f'Enter the bias: ')) 
for i in range(len(vector[0])): 
for j in range(input_vector): 
weight[j] = weight[j] + n*output[i]*vector[j][i] 
bias = bias + n*output[i] 
print('-----------------------') 
print(f'For input-{i} : ') 
print(f'weight : {weight}') 
print(f'bias : {bias} ')


Q2
Code :
vector = []
# input 
input_vector = int(input('Enter the Number of inputs: ')) 
for i in range(input_vector): 
vector.append(list(map(float, input(f'Enter the input-{i} : ').strip().split()))) 
# output 
output = list(map(float,input(f'Enter the output-{i} : ').strip().split())) 
# weights 
weight = list(map(float, input(f'Enter the weights : ').strip().split())) 
# learning rate 
n = float(input(f'Enter the learning rate: ')) 
# bias 
bias = float(input(f'Enter the bias: ')) 
for i in range(len(vector[0])): 
for j in range(input_vector): 
weight[j] = weight[j] + n*output[i]*vector[j][i] 
bias = bias + n*output[i] 
print('-----------------------') 
print(f'For input-{i} : ') 
print(f'weight : {weight}') 
print(f'bias : {bias} ')

